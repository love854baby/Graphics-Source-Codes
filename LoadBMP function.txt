unsigned char *LoadBMP(char file_name[], int *w, int *h)
{
	unsigned char *new_image;
	GLubyte header[54]; // 54-byte header
	int numbytesinrow, numpadbytes;
	int width, height, bitsperpixel, compression;
	long count = 0;
	int i, j, k;
	unsigned char r, g, b, dum;
	FILE *file = fopen(file_name,"rb");
	printf("file name: %s\n", file_name);
	if (file == NULL) {
		printf("cannot open file %s\n",file_name);
		exit(1);
	};
	if (fread(header,1,54,file) != 54) { //must read 54 bytes
		printf("cannot read 54-byte header\n");
		fclose(file);
		exit(1);
	};
	if (header[0]!='B' || header[1]!='M') { //must be ’BM’
		printf("not a bmp file\n");
		fclose(file);
		exit(1);
	};
	// 4-byte and 2-byte little-endian integers
	width = ((header[21]*256+header[20])*256+header[19])*256+header[18];
	height = ((header[25]*256+header[24])*256+header[23])*256+header[22];
	bitsperpixel= header[29]*256+header[28];
	compression = ((header[33]*256+header[32])*256+header[31])*256+header[30];
	if (compression != 0) {
		printf("file is compressed\n");
		fclose(file);
		exit(1);
	};
	if (bitsperpixel != 24) {
		printf("not a 24-bit pixel image\n");
		fclose(file);
		exit(1);
	};
	printf("width = %d\n",width);
	printf("height = %d\n",height);
	printf("bits per pixel = %d\n",bitsperpixel);
	printf("loading pixels...\n");
	/* allocate memory for texture */
	new_image = (unsigned char *) malloc((height)*(width)*3);
	//each row has pad bytes to make number of bytes a multiple of 4
	//so number of bytes is 3*width rounded up to next multiple of 4
	numbytesinrow = ((3 * width + 3)/4) * 4;
	numpadbytes = numbytesinrow - 3 * width; //need this many
	printf("number of bytes in row = %d\n",numbytesinrow);
	printf("number of pad bytes = %d\n",numpadbytes);
	for (i = 0; i < height; i++) {
		for (j = 0; j < width; j++) {
			b = fgetc(file);
			g = fgetc(file);
			r = fgetc(file);
			new_image[count++] = r;
			new_image[count++] = g;
			new_image[count++] = b;
		}
		for (k = 0; k < numpadbytes; k++) //skip pad bytes at row’s end
			dum = fgetc(file);
	}
	printf("number of pixels = %d\n\n",count/3); //should be height*width
	fclose(file);
	/* update the width and height pointer values */
	*w = width;
	*h = height;
	return new_image;
}
